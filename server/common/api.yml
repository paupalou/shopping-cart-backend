openapi: 3.0.1
info:
  title: cart-api
  description: Cart API
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Products
  description: Simple product endpoints
- name: Specification
  description: The swagger API specification
paths:
  /products:
    get:
      tags:
      - Products
      description: Fetch all products
      responses:
        200:
          description: Returns all products
          content: {}
    post:
      tags:
      - Products
      description: Create a new product
      requestBody:
        description: The schema of a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBody'
        required: true
      responses:
        200:
          description: Returns all products
          content: {}
  /products/{id}:
    get:
      tags:
      - Products
      parameters:
      - name: id
        in: path
        description: The id of the product to retrieve
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the product with the specified id
          content: {}
        404:
          description: Product not found
          content: {}
  /cart:
    post:
      tags:
      - Cart
      description: Create a new cart
      parameters:
        - in: query
          description: Flag to force we are on sunday
          name: isSunday
          schema:
            type: boolean
      requestBody:
        description: The schema of a new cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartBody'
        required: true
      responses:
        201:
          description: Returns all items in cart and total
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Cart'

  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    ProductBody:
      title: Product
      required:
      - name
      - customerPrice
      - cost
      type: object
      properties:
        name:
          type: string
          example: Jam
        customerPrice:
          type: number
          example: 1299
        cost:
          type: number
          example: 1099

    CartProduct:
      title: CartProduct
      required:
      - id
      - quantity
      type: object
      properties:
        id:
          type: number
          example: 1
        quantity:
          type: number
          example: 4

    CartBody:
      type: array
      items:
        $ref: '#/components/schemas/CartProduct'

    CartItem:
      title: CartItem
      required:
      - id
      - quantity
      type: object
      properties:
        name:
          type: string
          example: Jam
        quantity:
          type: number
          example: 4
        price:
          type: string
          example: $10.99
        total:
          type: number
          example: $43.96

    Cart:
      title: Cart
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        total:
          type: number
          example: 125.72
